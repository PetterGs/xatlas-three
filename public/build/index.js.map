{"version":3,"file":"index.js","mappings":"AACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,sBCAlF,IAAII,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,OAITO,KAAKR,EAAWK,GAClGH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,YCMtE,MAAMO,EAAcC,OAAO,iBACrBC,EAAiBD,OAAO,oBACxBE,EAAeF,OAAO,wBACtBG,EAAcH,OAAO,kBACrBI,EAAYC,GAAwB,iBAARA,GAA4B,OAARA,GAAgC,mBAARA,EAgDxEC,EAAmB,IAAIC,IAAI,CAC7B,CAAC,QA7CwB,CACzBC,UAAYH,GAAQD,EAASC,IAAQA,EAAIN,GACzCU,UAAUjC,GACN,MAAM,MAAEkC,EAAK,MAAEC,GAAU,IAAIC,eAE7B,OADAC,EAAOrC,EAAKkC,GACL,CAACC,EAAO,CAACA,KAEpBG,YAAYC,IACRA,EAAKC,QACEC,EAAKF,MAqChB,CAAC,QA/BwB,CACzBP,UAAYlB,GAAUc,EAASd,IAAUa,KAAeb,EACxDmB,WAAU,MAAEnB,IACR,IAAI4B,EAcJ,OAZIA,EADA5B,aAAiB6B,MACJ,CACTC,SAAS,EACT9B,MAAO,CACH+B,QAAS/B,EAAM+B,QACfC,KAAMhC,EAAMgC,KACZC,MAAOjC,EAAMiC,QAKR,CAAEH,SAAS,EAAO9B,MAAAA,GAE5B,CAAC4B,EAAY,KAExBJ,YAAYI,GACR,GAAIA,EAAWE,QACX,MAAMhD,OAAOoD,OAAO,IAAIL,MAAMD,EAAW5B,MAAM+B,SAAUH,EAAW5B,OAExE,MAAM4B,EAAW5B,WAUzB,SAASuB,EAAOrC,EAAKiD,EAAKC,MACtBD,EAAGE,iBAAiB,WAAW,SAASC,EAASC,GAC7C,IAAKA,IAAOA,EAAGC,KACX,OAEJ,MAAM,GAAEC,EAAE,KAAEC,EAAI,KAAEC,GAAS7D,OAAOoD,OAAO,CAAES,KAAM,IAAMJ,EAAGC,MACpDI,GAAgBL,EAAGC,KAAKI,cAAgB,IAAIC,IAAIC,GACtD,IAAIC,EACJ,IACI,MAAMC,EAASL,EAAKM,MAAM,GAAI,GAAGC,QAAO,CAAChE,EAAKC,IAASD,EAAIC,IAAOD,GAC5DiE,EAAWR,EAAKO,QAAO,CAAChE,EAAKC,IAASD,EAAIC,IAAOD,GACvD,OAAQwD,GACJ,IAAK,MAEGK,EAAcI,EAElB,MACJ,IAAK,MAEGH,EAAOL,EAAKM,OAAO,GAAG,IAAMH,EAAcP,EAAGC,KAAKxC,OAClD+C,GAAc,EAElB,MACJ,IAAK,QAEGA,EAAcI,EAAS3C,MAAMwC,EAAQJ,GAEzC,MACJ,IAAK,YAGGG,EAAcK,EADA,IAAID,KAAYP,IAGlC,MACJ,IAAK,WACD,CACI,MAAM,MAAExB,EAAK,MAAEC,GAAU,IAAIC,eAC7BC,EAAOrC,EAAKmC,GACZ0B,EA8HxB,SAAkB7D,EAAKmE,GAEnB,OADAC,EAAcC,IAAIrE,EAAKmE,GAChBnE,EAhI2BsE,CAASpC,EAAO,CAACA,IAEnC,MACJ,IAAK,UAEG2B,OAAcU,EAElB,MACJ,QACI,QAGZ,MAAOzD,GACH+C,EAAc,CAAE/C,MAAAA,EAAO,CAACa,GAAc,GAE1CjB,QAAQC,QAAQkD,GACXW,OAAO1D,IACD,CAAEA,MAAAA,EAAO,CAACa,GAAc,MAE9BN,MAAMwC,IACP,MAAOY,EAAWC,GAAiBC,EAAYd,GAC/CZ,EAAG2B,YAAYhF,OAAOoD,OAAOpD,OAAOoD,OAAO,GAAIyB,GAAY,CAAElB,GAAAA,IAAOmB,GACvD,YAATlB,IAEAP,EAAG4B,oBAAoB,UAAWzB,GAClC0B,EAAc7B,UAItBA,EAAGT,OACHS,EAAGT,QAMX,SAASsC,EAAcC,IAHvB,SAAuBA,GACnB,MAAqC,gBAA9BA,EAASC,YAAYlC,MAGxBmC,CAAcF,IACdA,EAASG,QAEjB,SAASzC,EAAKQ,EAAIkC,GACd,OAAOC,EAAYnC,EAAI,GAAIkC,GAE/B,SAASE,EAAqBC,GAC1B,GAAIA,EACA,MAAM,IAAI3C,MAAM,8CAGxB,SAASyC,EAAYnC,EAAIQ,EAAO,GAAI0B,EAAS,cACzC,IAAII,GAAkB,EACtB,MAAMrB,EAAQ,IAAIsB,MAAML,EAAQ,CAC5BpF,IAAI0F,EAASxF,GAET,GADAoF,EAAqBE,GACjBtF,IAASyB,EACT,MAAO,IACIgE,EAAuBzC,EAAI,CAC9BO,KAAM,UACNC,KAAMA,EAAKE,KAAKgC,GAAMA,EAAEC,eACzBvE,MAAK,KACJyD,EAAc7B,GACdsC,GAAkB,KAI9B,GAAa,SAATtF,EAAiB,CACjB,GAAoB,IAAhBwD,EAAKoC,OACL,MAAO,CAAExE,KAAM,IAAM6C,GAEzB,MAAM4B,EAAIJ,EAAuBzC,EAAI,CACjCO,KAAM,MACNC,KAAMA,EAAKE,KAAKgC,GAAMA,EAAEC,eACzBvE,KAAKuC,GACR,OAAOkC,EAAEzE,KAAK0E,KAAKD,GAEvB,OAAOV,EAAYnC,EAAI,IAAIQ,EAAMxD,KAErCoE,IAAIoB,EAASxF,EAAMgE,GACfoB,EAAqBE,GAGrB,MAAOzE,EAAO4D,GAAiBC,EAAYV,GAC3C,OAAOyB,EAAuBzC,EAAI,CAC9BO,KAAM,MACNC,KAAM,IAAIA,EAAMxD,GAAM0D,KAAKgC,GAAMA,EAAEC,aACnC9E,MAAAA,GACD4D,GAAerD,KAAKuC,IAE3BtC,MAAMmE,EAASO,EAAUC,GACrBZ,EAAqBE,GACrB,MAAMW,EAAOzC,EAAKA,EAAKoC,OAAS,GAChC,GAAIK,IAASzE,EACT,OAAOiE,EAAuBzC,EAAI,CAC9BO,KAAM,aACPnC,KAAKuC,GAGZ,GAAa,SAATsC,EACA,OAAOd,EAAYnC,EAAIQ,EAAKM,MAAM,GAAI,IAE1C,MAAOL,EAAcgB,GAAiByB,EAAiBF,GACvD,OAAOP,EAAuBzC,EAAI,CAC9BO,KAAM,QACNC,KAAMA,EAAKE,KAAKgC,GAAMA,EAAEC,aACxBlC,aAAAA,GACDgB,GAAerD,KAAKuC,IAE3BwC,UAAUX,EAASQ,GACfZ,EAAqBE,GACrB,MAAO7B,EAAcgB,GAAiByB,EAAiBF,GACvD,OAAOP,EAAuBzC,EAAI,CAC9BO,KAAM,YACNC,KAAMA,EAAKE,KAAKgC,GAAMA,EAAEC,aACxBlC,aAAAA,GACDgB,GAAerD,KAAKuC,MAG/B,OAAOM,EAKX,SAASiC,EAAiBzC,GACtB,MAAM2C,EAAY3C,EAAaC,IAAIgB,GACnC,MAAO,CAAC0B,EAAU1C,KAAK2C,GAAMA,EAAE,MALnBC,EAK+BF,EAAU1C,KAAK2C,GAAMA,EAAE,KAJ3DE,MAAMtG,UAAUuG,OAAOnF,MAAM,GAAIiF,KAD5C,IAAgBA,EAOhB,MAAMnC,EAAgB,IAAIsC,QAK1B,SAASxC,EAAMlE,GACX,OAAOJ,OAAOoD,OAAOhD,EAAK,CAAE,CAACuB,IAAc,IAS/C,SAASoD,EAAY7D,GACjB,IAAK,MAAOgC,EAAM6D,KAAY7E,EAC1B,GAAI6E,EAAQ3E,UAAUlB,GAAQ,CAC1B,MAAO8F,EAAiBlC,GAAiBiC,EAAQ1E,UAAUnB,GAC3D,MAAO,CACH,CACI0C,KAAM,UACNV,KAAAA,EACAhC,MAAO8F,GAEXlC,GAIZ,MAAO,CACH,CACIlB,KAAM,MACN1C,MAAAA,GAEJsD,EAAcrE,IAAIe,IAAU,IAGpC,SAAS8C,EAAc9C,GACnB,OAAQA,EAAM0C,MACV,IAAK,UACD,OAAO1B,EAAiB/B,IAAIe,EAAMgC,MAAMR,YAAYxB,EAAMA,OAC9D,IAAK,MACD,OAAOA,EAAMA,OAGzB,SAAS4E,EAAuBzC,EAAI4D,EAAK1C,GACrC,OAAO,IAAIzD,SAASC,IAChB,MAAM4C,EAeH,IAAIiD,MAAM,GACZM,KAAK,GACLnD,KAAI,IAAMoD,KAAKC,MAAMD,KAAKE,SAAWC,OAAOC,kBAAkBvB,SAAS,MACvEwB,KAAK,KAjBNnE,EAAGE,iBAAiB,WAAW,SAASkE,EAAEhE,GACjCA,EAAGC,MAASD,EAAGC,KAAKC,IAAMF,EAAGC,KAAKC,KAAOA,IAG9CN,EAAG4B,oBAAoB,UAAWwC,GAClC1G,EAAQ0C,EAAGC,UAEXL,EAAGT,OACHS,EAAGT,QAEPS,EAAG2B,YAAYhF,OAAOoD,OAAO,CAAEO,GAAAA,GAAMsD,GAAM1C,MCtR5C,MAAMmD,UCXN,QDYHC,KAAKC,EAAQC,EAAYC,EAAcC,GACnC,IAAIC,KAAKC,IAAT,CAEA,IAAKF,EACD,MAAM,IAAIhF,MAAM,8BACpB,MAjBoC,IAAUrC,EAASC,EAAYC,EAAGC,EAAxBH,EAiB7BsH,KAjBsCrH,OAiBhC,EAjB+CE,EAiB/B,YACnC,MAAMqH,QAAmBC,MAAMJ,GAAgBtG,MAAK2G,GAAOA,EAAIC,SACzDC,EAAYC,IAAIC,gBAAgBN,GAChCO,EAAI,IAAIC,OAAOJ,EAAW,CAAE1E,KAAM,WAExCoE,KAAKC,UAAY,IAAMpF,EAAK4F,GAAX,CAAenE,GAAM,KAClCsD,IACAW,IAAII,gBAAgBL,MACpBhE,GAAM,CAACT,EAAM+E,IACI,oBAAT/E,EAA6BiE,EAAejE,EAAO+E,IAC3DtE,EAAMuD,KAzBX,KAFgEjH,OAiBpC,KAfjBA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,OAITO,KAAKR,EAAWK,GAClGH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,YAW9D,KEfD,MAAMyH,UJON,MAOHzD,YAAY0D,EAAOC,EAAc,CAC7BC,WAAY,MACbC,EAAe,GAAIC,GAClBlB,KAAKc,MAAQA,EACbd,KAAKe,YAAcA,EACnBf,KAAKiB,aAAeA,EACpBjB,KAAKkB,WAAaA,EAClBlB,KAAKmB,gBAAiB,EACtBnB,KAAKoB,eAAgB,EACrBpB,KAAKqB,OAASrB,KAAKsB,gBAEvBC,YAAY1B,EAAYC,EAAcC,GAClC,OAAOtH,EAAUuH,UAAM,OAAQ,GAAQ,YACnC,IAAIA,KAAKmB,eAAT,CAYA,UAVM,IAAIrI,SAAQ,CAACC,EAASC,KACxB,IACIgH,KAAKqB,OAAO1B,MAAK,KACb5G,MACD8G,EAAYC,EAAcC,GAEjC,MAAO1G,GACHL,EAAOK,QAGN2G,KAAKqB,OAAOpB,aAAYD,KAAKqB,OAAOpB,IAAIuB,eACvC,IAAI1I,SAAQoF,GAAKuD,WAAWvD,EAAG,OAEzC8B,KAAKmB,gBAAiB,MAU9BO,UAAUC,EAAUC,EAAW,MAAOC,EAAU,MAC5C,OAAOpJ,EAAUuH,UAAM,OAAQ,GAAQ,YACnC,IAAKA,KAAKmB,eAEN,OADAW,QAAQC,KAAK,oCACN,GAEX,IAAKJ,EACD,MAAO,GACX,GAAIA,EAAS1D,OAAS,EAClB,MAAO,GACX,MAAM+D,EAAShC,KAAKiB,aAAagB,gBACjC,KAAOjC,KAAKoB,eACRU,QAAQI,IAAI,iDACN,IAAIpJ,SAAQoF,GAAKuD,WAAWvD,EAAG,OAMzC8B,KAAKoB,eAAgB,QACfpB,KAAKqB,OAAOpB,IAAIkC,oBAAmB,SACnCnC,KAAKqB,OAAOpB,IAAImC,cACtB,IAAIC,EAAY,GACZC,EAAM,GACV,IAAK,IAAIC,KAAQZ,EAAU,CACvB,IAAI,KAAEa,EAAI,MAAEC,EAAK,WAAEC,GAAeH,EAClC,MAAMI,EAAS,EAEfN,EAAUO,KAAKJ,GACVC,GAAUC,EAAWG,UAA6C,IAAjCH,EAAWG,SAASC,UAI1DR,EAAM,OAASD,EAAUpE,OAAS,oBAAsBuE,EACxDV,QAAQI,WAAWO,EAAMM,OACzBjB,QAAQkB,KAAKV,SACPtC,KAAKqB,OAAOpB,IAAIgD,QAAQR,EAAMM,MAAOL,EAAWG,SAASE,MAAOL,EAAWQ,OAASR,EAAWQ,OAAOH,WAAQpG,EAAW+F,EAAWS,GAAKT,EAAWS,GAAGJ,WAAQpG,EAAW6F,EAAMxC,KAAKkB,WAAYc,EAAQW,GAC/Mb,QAAQsB,QAAQd,IAPZR,QAAQC,KAAK,2BAA4BQ,GASjDD,EAAM,wBAA0BD,EAAUpE,OAAS,UACnD6D,QAAQkB,KAAKV,GACb,IAAIe,QAAerD,KAAKqB,OAAOpB,IAAIqD,cAActD,KAAKiB,aAAcjB,KAAKe,aAAa,GACtFe,QAAQsB,QAAQd,GAChB,IAAIiB,EAAM,GACV,IAAK,IAAIC,KAAKH,EAAQ,CAIlB,IAAId,EAAOZ,EAAS8B,MAAKC,GAAKA,EAAElB,OAASgB,EAAEjB,OACtCA,GAcDiB,EAAEG,OAAOC,UACTrB,EAAKsB,aAAa,WAAY,IAAI7D,KAAKc,MAAMgD,gBAAgBN,EAAEG,OAAOC,SAAU,GAAG,IACnFJ,EAAEG,OAAOI,SACTxB,EAAKsB,aAAa,SAAU,IAAI7D,KAAKc,MAAMgD,gBAAgBN,EAAEG,OAAOI,QAAS,GAAG,IAChFP,EAAEG,OAAOK,SACTzB,EAAKsB,aAAajC,EAAU,IAAI5B,KAAKc,MAAMgD,gBAAgBN,EAAEG,OAAOK,QAAS,GAAG,IAChFR,EAAEG,OAAOM,QAAUrC,IAAaC,GAChCU,EAAKsB,aAAahC,EAAS,IAAI7B,KAAKc,MAAMgD,gBAAgBN,EAAEG,OAAOM,OAAQ,GAAG,IAC9ET,EAAEf,OACFF,EAAK2B,SAAS,IAAIlE,KAAKc,MAAMgD,gBAAgBN,EAAEf,MAAO,GAAG,IAC7Dc,EAAIX,KAAKL,IAvBLT,QAAQqC,MAAM,mBAAoBX,EAAEjB,MA2B5C,aAFMvC,KAAKqB,OAAOpB,IAAImE,eACtBpE,KAAKoB,eAAgB,EACdmC,KAUfc,eAAeC,EAAU1C,EAAW,KAAMC,EAAU,OAChD,OAAOpJ,EAAUuH,UAAM,OAAQ,GAAQ,YACnC,OAAOA,KAAK0B,UAAU,CAAC4C,GAAW1C,EAAUC,QI5IpDP,gBACI,OAAO,IAAI5B,G","sources":["webpack://xatlas-three/webpack/bootstrap","webpack://xatlas-three/webpack/runtime/define property getters","webpack://xatlas-three/webpack/runtime/hasOwnProperty shorthand","webpack://xatlas-three/./src/UVUnwrapper.ts","webpack://xatlas-three/./node_modules/comlink/dist/esm/comlink.mjs","webpack://xatlas-three/./src/XAtlasWebWorker.ts","webpack://xatlas-three/./src/baseXAtlas.ts","webpack://xatlas-three/./src/unwrapperWorker.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport class BaseUVUnwrapper {\n    /**\n     *\n     * @param THREE - for reference to BufferAttribute\n     * @param packOptions - options for packing\n     * @param chartOptions - options for unwrapping\n     * @param useNormals - If true, will use the normals to calculate the uv     */\n    constructor(THREE, packOptions = {\n        resolution: 2048,\n    }, chartOptions = {}, useNormals) {\n        this.THREE = THREE;\n        this.packOptions = packOptions;\n        this.chartOptions = chartOptions;\n        this.useNormals = useNormals;\n        this._libraryLoaded = false;\n        this._isUnwrapping = false;\n        this.xAtlas = this._createXAtlas();\n    }\n    loadLibrary(onProgress, wasmFilePath, workerFilePath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._libraryLoaded)\n                return;\n            yield new Promise((resolve, reject) => {\n                try {\n                    this.xAtlas.init(() => {\n                        resolve();\n                    }, onProgress, wasmFilePath, workerFilePath);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n            while (!(this.xAtlas.api ? yield this.xAtlas.api.loaded : false)) {\n                yield new Promise(r => setTimeout(r, 100)); // wait for load just in case\n            }\n            this._libraryLoaded = true;\n        });\n    }\n    /**\n     * Pack multiple geometry into a single atlas\n     * @param THREE\n     * @param nodeList - list of geometries to unwrap\n     * @param outputUv - Attribute to write the output uv to\n     * @param inputUv - Attribute to write the input uv to (if any)\n     */\n    packAtlas(nodeList, outputUv = 'uv2', inputUv = 'uv') {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._libraryLoaded) {\n                console.warn('xatlas-three: library not loaded');\n                return [];\n            }\n            if (!nodeList)\n                return [];\n            if (nodeList.length < 1)\n                return [];\n            const useUvs = this.chartOptions.useInputMeshUvs;\n            while (this._isUnwrapping) {\n                console.log(\"unwrapping another mesh, waiting 100 ms\");\n                yield new Promise(r => setTimeout(r, 100));\n            }\n            // if(!(xAtlas.loaded)) { // when not using worker. todo\n            // xAtlas.addOnLoad(proxy(()=>xAtlasUnWrapLiteGLMeshes(nodeList, onFinish, chartOptions, packOptions, useNormals, useUvs, resultAttribute, originalAttribute)));\n            // return;\n            // }\n            this._isUnwrapping = true;\n            yield this.xAtlas.api.setProgressLogging(true);\n            yield this.xAtlas.api.createAtlas();\n            let meshAdded = [];\n            let tag = \"\"; // for time logging\n            for (let mesh of nodeList) {\n                let { uuid, index, attributes } = mesh;\n                const scaled = 1; //todo\n                // if (unwrap === false) continue;\n                meshAdded.push(uuid);\n                if (!index || !attributes.position || attributes.position.itemSize !== 3) {\n                    console.warn(\"Geometry not supported: \", mesh);\n                    continue;\n                }\n                tag = \"Mesh\" + meshAdded.length + \" added to atlas: \" + uuid;\n                console.log(typeof index.array);\n                console.time(tag);\n                yield this.xAtlas.api.addMesh(index.array, attributes.position.array, attributes.normal ? attributes.normal.array : undefined, attributes.uv ? attributes.uv.array : undefined, uuid, this.useNormals, useUvs, scaled);\n                console.timeEnd(tag);\n            }\n            tag = \"Generated atlas with \" + meshAdded.length + \" meshes\";\n            console.time(tag);\n            let meshes = yield this.xAtlas.api.generateAtlas(this.chartOptions, this.packOptions, true);\n            console.timeEnd(tag);\n            let ret = [];\n            for (let m of meshes) {\n                /**\n                 * @type {Mesh}\n                 */\n                let mesh = nodeList.find(n => n.uuid === m.mesh);\n                if (!mesh) {\n                    console.error(\"Mesh not found: \", m.mesh);\n                    continue;\n                }\n                // if(mesh.getAttribute(\"position\"))\n                //     mesh.deleteAttribute(\"position\");\n                // if(mesh.getAttribute(\"normal\") && m.vertex.normal)\n                //     mesh.deleteAttribute(\"normal\");\n                // if(mesh.getAttribute(\"uv\") && m.vertex.uv)\n                //     mesh.deleteAttribute(\"uv\");\n                // if(mesh.getAttribute(\"uv2\"))\n                //     mesh.deleteAttribute(\"uv2\");\n                // if(mesh.getIndex())\n                //     mesh.setIndex(null);\n                if (m.vertex.vertices)\n                    mesh.setAttribute('position', new this.THREE.BufferAttribute(m.vertex.vertices, 3, false));\n                if (m.vertex.normals)\n                    mesh.setAttribute('normal', new this.THREE.BufferAttribute(m.vertex.normals, 3, true));\n                if (m.vertex.coords1)\n                    mesh.setAttribute(outputUv, new this.THREE.BufferAttribute(m.vertex.coords1, 2, false));\n                if (m.vertex.coords && outputUv !== inputUv)\n                    mesh.setAttribute(inputUv, new this.THREE.BufferAttribute(m.vertex.coords, 2, false));\n                if (m.index)\n                    mesh.setIndex(new this.THREE.BufferAttribute(m.index, 1, false));\n                ret.push(mesh);\n            }\n            yield this.xAtlas.api.destroyAtlas();\n            this._isUnwrapping = false;\n            return ret;\n        });\n    }\n    /**\n     * Unwraps a geometry to generate uv\n     * @param geometry\n     * @param outputUv\n     * @param inputUv\n     * @param useNormals\n     */\n    unwrapGeometry(geometry, outputUv = 'uv', inputUv = 'uv2') {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.packAtlas([geometry], outputUv, inputUv);\n        });\n    }\n}\n","/**\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst proxyMarker = Symbol(\"Comlink.proxy\");\r\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\r\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\r\nconst throwMarker = Symbol(\"Comlink.thrown\");\r\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\r\n/**\r\n * Internal transfer handle to handle objects marked to proxy.\r\n */\r\nconst proxyTransferHandler = {\r\n    canHandle: (val) => isObject(val) && val[proxyMarker],\r\n    serialize(obj) {\r\n        const { port1, port2 } = new MessageChannel();\r\n        expose(obj, port1);\r\n        return [port2, [port2]];\r\n    },\r\n    deserialize(port) {\r\n        port.start();\r\n        return wrap(port);\r\n    },\r\n};\r\n/**\r\n * Internal transfer handler to handle thrown exceptions.\r\n */\r\nconst throwTransferHandler = {\r\n    canHandle: (value) => isObject(value) && throwMarker in value,\r\n    serialize({ value }) {\r\n        let serialized;\r\n        if (value instanceof Error) {\r\n            serialized = {\r\n                isError: true,\r\n                value: {\r\n                    message: value.message,\r\n                    name: value.name,\r\n                    stack: value.stack,\r\n                },\r\n            };\r\n        }\r\n        else {\r\n            serialized = { isError: false, value };\r\n        }\r\n        return [serialized, []];\r\n    },\r\n    deserialize(serialized) {\r\n        if (serialized.isError) {\r\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\r\n        }\r\n        throw serialized.value;\r\n    },\r\n};\r\n/**\r\n * Allows customizing the serialization of certain values.\r\n */\r\nconst transferHandlers = new Map([\r\n    [\"proxy\", proxyTransferHandler],\r\n    [\"throw\", throwTransferHandler],\r\n]);\r\nfunction expose(obj, ep = self) {\r\n    ep.addEventListener(\"message\", function callback(ev) {\r\n        if (!ev || !ev.data) {\r\n            return;\r\n        }\r\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\r\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\r\n        let returnValue;\r\n        try {\r\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\r\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\r\n            switch (type) {\r\n                case \"GET\" /* GET */:\r\n                    {\r\n                        returnValue = rawValue;\r\n                    }\r\n                    break;\r\n                case \"SET\" /* SET */:\r\n                    {\r\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\r\n                        returnValue = true;\r\n                    }\r\n                    break;\r\n                case \"APPLY\" /* APPLY */:\r\n                    {\r\n                        returnValue = rawValue.apply(parent, argumentList);\r\n                    }\r\n                    break;\r\n                case \"CONSTRUCT\" /* CONSTRUCT */:\r\n                    {\r\n                        const value = new rawValue(...argumentList);\r\n                        returnValue = proxy(value);\r\n                    }\r\n                    break;\r\n                case \"ENDPOINT\" /* ENDPOINT */:\r\n                    {\r\n                        const { port1, port2 } = new MessageChannel();\r\n                        expose(obj, port2);\r\n                        returnValue = transfer(port1, [port1]);\r\n                    }\r\n                    break;\r\n                case \"RELEASE\" /* RELEASE */:\r\n                    {\r\n                        returnValue = undefined;\r\n                    }\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n        catch (value) {\r\n            returnValue = { value, [throwMarker]: 0 };\r\n        }\r\n        Promise.resolve(returnValue)\r\n            .catch((value) => {\r\n            return { value, [throwMarker]: 0 };\r\n        })\r\n            .then((returnValue) => {\r\n            const [wireValue, transferables] = toWireValue(returnValue);\r\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\r\n            if (type === \"RELEASE\" /* RELEASE */) {\r\n                // detach and deactive after sending release response above.\r\n                ep.removeEventListener(\"message\", callback);\r\n                closeEndPoint(ep);\r\n            }\r\n        });\r\n    });\r\n    if (ep.start) {\r\n        ep.start();\r\n    }\r\n}\r\nfunction isMessagePort(endpoint) {\r\n    return endpoint.constructor.name === \"MessagePort\";\r\n}\r\nfunction closeEndPoint(endpoint) {\r\n    if (isMessagePort(endpoint))\r\n        endpoint.close();\r\n}\r\nfunction wrap(ep, target) {\r\n    return createProxy(ep, [], target);\r\n}\r\nfunction throwIfProxyReleased(isReleased) {\r\n    if (isReleased) {\r\n        throw new Error(\"Proxy has been released and is not useable\");\r\n    }\r\n}\r\nfunction createProxy(ep, path = [], target = function () { }) {\r\n    let isProxyReleased = false;\r\n    const proxy = new Proxy(target, {\r\n        get(_target, prop) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            if (prop === releaseProxy) {\r\n                return () => {\r\n                    return requestResponseMessage(ep, {\r\n                        type: \"RELEASE\" /* RELEASE */,\r\n                        path: path.map((p) => p.toString()),\r\n                    }).then(() => {\r\n                        closeEndPoint(ep);\r\n                        isProxyReleased = true;\r\n                    });\r\n                };\r\n            }\r\n            if (prop === \"then\") {\r\n                if (path.length === 0) {\r\n                    return { then: () => proxy };\r\n                }\r\n                const r = requestResponseMessage(ep, {\r\n                    type: \"GET\" /* GET */,\r\n                    path: path.map((p) => p.toString()),\r\n                }).then(fromWireValue);\r\n                return r.then.bind(r);\r\n            }\r\n            return createProxy(ep, [...path, prop]);\r\n        },\r\n        set(_target, prop, rawValue) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\r\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\r\n            const [value, transferables] = toWireValue(rawValue);\r\n            return requestResponseMessage(ep, {\r\n                type: \"SET\" /* SET */,\r\n                path: [...path, prop].map((p) => p.toString()),\r\n                value,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        apply(_target, _thisArg, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const last = path[path.length - 1];\r\n            if (last === createEndpoint) {\r\n                return requestResponseMessage(ep, {\r\n                    type: \"ENDPOINT\" /* ENDPOINT */,\r\n                }).then(fromWireValue);\r\n            }\r\n            // We just pretend that `bind()` didn’t happen.\r\n            if (last === \"bind\") {\r\n                return createProxy(ep, path.slice(0, -1));\r\n            }\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: \"APPLY\" /* APPLY */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        construct(_target, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: \"CONSTRUCT\" /* CONSTRUCT */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n    });\r\n    return proxy;\r\n}\r\nfunction myFlat(arr) {\r\n    return Array.prototype.concat.apply([], arr);\r\n}\r\nfunction processArguments(argumentList) {\r\n    const processed = argumentList.map(toWireValue);\r\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\r\n}\r\nconst transferCache = new WeakMap();\r\nfunction transfer(obj, transfers) {\r\n    transferCache.set(obj, transfers);\r\n    return obj;\r\n}\r\nfunction proxy(obj) {\r\n    return Object.assign(obj, { [proxyMarker]: true });\r\n}\r\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\r\n    return {\r\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\r\n        addEventListener: context.addEventListener.bind(context),\r\n        removeEventListener: context.removeEventListener.bind(context),\r\n    };\r\n}\r\nfunction toWireValue(value) {\r\n    for (const [name, handler] of transferHandlers) {\r\n        if (handler.canHandle(value)) {\r\n            const [serializedValue, transferables] = handler.serialize(value);\r\n            return [\r\n                {\r\n                    type: \"HANDLER\" /* HANDLER */,\r\n                    name,\r\n                    value: serializedValue,\r\n                },\r\n                transferables,\r\n            ];\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            type: \"RAW\" /* RAW */,\r\n            value,\r\n        },\r\n        transferCache.get(value) || [],\r\n    ];\r\n}\r\nfunction fromWireValue(value) {\r\n    switch (value.type) {\r\n        case \"HANDLER\" /* HANDLER */:\r\n            return transferHandlers.get(value.name).deserialize(value.value);\r\n        case \"RAW\" /* RAW */:\r\n            return value.value;\r\n    }\r\n}\r\nfunction requestResponseMessage(ep, msg, transfers) {\r\n    return new Promise((resolve) => {\r\n        const id = generateUUID();\r\n        ep.addEventListener(\"message\", function l(ev) {\r\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\r\n                return;\r\n            }\r\n            ep.removeEventListener(\"message\", l);\r\n            resolve(ev.data);\r\n        });\r\n        if (ep.start) {\r\n            ep.start();\r\n        }\r\n        ep.postMessage(Object.assign({ id }, msg), transfers);\r\n    });\r\n}\r\nfunction generateUUID() {\r\n    return new Array(4)\r\n        .fill(0)\r\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\r\n        .join(\"-\");\r\n}\n\nexport { createEndpoint, expose, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { BaseXAtlas } from \"./baseXAtlas\";\nimport { proxy, wrap } from \"comlink\";\nexport class XAtlasWebWorker extends BaseXAtlas {\n    init(onLoad, onProgress, wasmFilePath, workerFilePath) {\n        if (this.api)\n            return;\n        if (!workerFilePath)\n            throw new Error(\"workerFilePath is required\");\n        (() => __awaiter(this, void 0, void 0, function* () {\n            const workerCode = yield fetch(workerFilePath).then(res => res.blob());\n            const workerUrl = URL.createObjectURL(workerCode);\n            const t = new Worker(workerUrl, { type: 'module', });\n            // @ts-ignore\n            this.api = yield (new (wrap(t))(proxy(() => {\n                onLoad();\n                URL.revokeObjectURL(workerUrl);\n            }), proxy((path, dir) => {\n                return (path === \"xatlas_web.wasm\" ? wasmFilePath : path + dir);\n            }), proxy(onProgress)));\n        }))();\n    }\n}\n","export class BaseXAtlas {\n}\n","import { BaseUVUnwrapper } from \"./UVUnwrapper\";\nimport { XAtlasWebWorker } from \"./XAtlasWebWorker\";\nexport class UVUnwrapper extends BaseUVUnwrapper {\n    _createXAtlas() {\n        return new XAtlasWebWorker();\n    }\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","proxyMarker","Symbol","createEndpoint","releaseProxy","throwMarker","isObject","val","transferHandlers","Map","canHandle","serialize","port1","port2","MessageChannel","expose","deserialize","port","start","wrap","serialized","Error","isError","message","name","stack","assign","ep","self","addEventListener","callback","ev","data","id","type","path","argumentList","map","fromWireValue","returnValue","parent","slice","reduce","rawValue","proxy","transfers","transferCache","set","transfer","undefined","catch","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","endpoint","constructor","isMessagePort","close","target","createProxy","throwIfProxyReleased","isReleased","isProxyReleased","Proxy","_target","requestResponseMessage","p","toString","length","r","bind","_thisArg","rawArgumentList","last","processArguments","construct","processed","v","arr","Array","concat","WeakMap","handler","serializedValue","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","l","XAtlasWebWorker","init","onLoad","onProgress","wasmFilePath","workerFilePath","this","api","workerCode","fetch","res","blob","workerUrl","URL","createObjectURL","t","Worker","revokeObjectURL","dir","UVUnwrapper","THREE","packOptions","resolution","chartOptions","useNormals","_libraryLoaded","_isUnwrapping","xAtlas","_createXAtlas","loadLibrary","loaded","setTimeout","packAtlas","nodeList","outputUv","inputUv","console","warn","useUvs","useInputMeshUvs","log","setProgressLogging","createAtlas","meshAdded","tag","mesh","uuid","index","attributes","scaled","push","position","itemSize","array","time","addMesh","normal","uv","timeEnd","meshes","generateAtlas","ret","m","find","n","vertex","vertices","setAttribute","BufferAttribute","normals","coords1","coords","setIndex","error","destroyAtlas","unwrapGeometry","geometry"],"sourceRoot":""}